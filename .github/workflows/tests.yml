name: Tests
on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  analysis:
    name: Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Making executable gradlew
        run: chmod +x gradlew
      - name: Building
        run: ./gradlew build
      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: ./gradlew sonarqube --info
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: analysis
    if: ${{ success() }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Making executable gradlew
        run: chmod +x gradlew
      - name: Cleaning
        run: ./gradlew clean
      - name: Building
        run: ./gradlew build
      - name: Running test
        run: ./gradlew check -i -DincludeTags='unit'
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit
    if: ${{ success() }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Making executable gradlew
        run: chmod +x gradlew
      - name: Cleaning
        run: ./gradlew clean
      - name: Building
        run: ./gradlew build
      - name: Running test
        run: ./gradlew check -i -DincludeTags='integration'
  validation:
    name: Validation Tests
    runs-on: ubuntu-latest
    needs: [ unit, integration ]
    if: ${{ success() }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Making executable gradlew
        run: chmod +x gradlew
      - name: Cleaning
        run: ./gradlew clean
      - name: Building
        run: ./gradlew build
      - name: Running test
        run: ./gradlew check -i -DincludeTags='validation'
